<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd" default-lazy-init="true">

    <description>配置主-从数据源信息</description>
    <!--<context:component-scan base-package="cn.mylava"/>-->

    <context:property-placeholder location="dataSource.properties"/>

    <!-- com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean -->
    <bean id="abstractXADataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" abstract="true">
        <property name="xaDataSourceClassName" value="${jdbc.xaDataSourceClassName}"/>
        <property name="poolSize" value="${jdbc.initialSize}" />
        <property name="minPoolSize" value="${jdbc.initialSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxActive}"/>
        <property name="reapTimeout" value="${jdbc.reapTimeout}"/>
        <property name="loginTimeout" value="${jdbc.loginTimeout}"/>
        <property name="testQuery" value="${validationQuery}"/>
        <property name="borrowConnectionTimeout" value="60" />
        <property name="maintenanceInterval" value="60"/>
    </bean>
    <bean id="masterDataSource" parent="abstractXADataSource">
        <property name="uniqueResourceName" value="masterDB" />
        <!--继承parent的属性，如果使用不同数据库，单独在这里设置属性-->
        <!--<property name="xaDataSourceClassName" value="${jdbc.xaDataSourceClassName}"/>-->
        <property name="xaProperties">
            <props>
                <prop key="driverClassName">${jdbc.driverClassName}</prop>
                <prop key="url">${master.jdbc.url}</prop>
                <prop key="password">${jdbc.password}</prop>
                <prop key="username">${jdbc.username}</prop>   <!-- durid -->
                <prop key="initialSize">1</prop>
                <prop key="maxActive">20</prop> <!-- 若不配置则代码执行"{dataSource-1} inited"此处停止  -->
                <prop key="minIdle">1</prop>
                <prop key="maxWait">60000</prop>
                <prop key="validationQuery">${validationQuery}</prop>
                <prop key="testOnBorrow">false</prop>
                <prop key="testOnReturn">false</prop>
                <prop key="testWhileIdle">true</prop>
                <prop key="removeAbandoned">true</prop>
                <prop key="removeAbandonedTimeout">1800</prop>
                <prop key="timeBetweenEvictionRunsMillis">60000</prop>
                <prop key="minEvictableIdleTimeMillis">25200000</prop>
                <prop key="logAbandoned">true</prop>
                <prop key="filters">mergeStat</prop>
            </props>
        </property>
    </bean>
    <bean id="slaveDataSource" parent="abstractXADataSource">
        <property name="uniqueResourceName" value="slaveDB" />
        <property name="xaProperties">
            <props>
                <prop key="driverClassName">${jdbc.driverClassName}</prop>
                <prop key="url">${slave.jdbc.url}</prop>
                <prop key="password">${jdbc.password}</prop>
                <prop key="username">${jdbc.username}</prop>   <!-- durid -->
                <prop key="initialSize">1</prop>
                <prop key="maxActive">20</prop> <!-- 若不配置则代码执行"{dataSource-1} inited"此处停止  -->
                <prop key="minIdle">1</prop>
                <prop key="maxWait">60000</prop>
                <prop key="validationQuery">${validationQuery}</prop>
                <prop key="testOnBorrow">false</prop>
                <prop key="testOnReturn">false</prop>
                <prop key="testWhileIdle">true</prop>
                <prop key="removeAbandoned">true</prop>
                <prop key="removeAbandonedTimeout">1800</prop>
                <prop key="timeBetweenEvictionRunsMillis">60000</prop>
                <prop key="minEvictableIdleTimeMillis">25200000</prop>
                <prop key="logAbandoned">true</prop>
                <prop key="filters">mergeStat</prop>
            </props>
        </property>
    </bean>


    <bean id="masterSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config-master.xml" />
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>
        <property name="dataSource" ref="masterDataSource" />
    </bean>

    <bean id="slaveSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config-slave.xml" />
        <property name="dataSource" ref="slaveDataSource" />
    </bean>

    <!-- MyBatis为不同的mapper注入sqlSessionFactory -->
    <bean id="masterMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="masterSqlSessionFactory" />
        <property name="mapperInterface" value="cn.mylava.mapper.master" />
    </bean>
    <bean id="slaveMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="slaveSqlSessionFactory" />
        <property name="mapperInterface" value="cn.mylava.mapper.slave" />
    </bean>


    <!-- 分布式事务 -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
        <property name="forceShutdown" value="true"/>
    </bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 开启注解 -->
    <context:annotation-config />
    <!-- base-package指向注解要扫描的包 -->
    <context:component-scan base-package="cn.mylava" />

</beans>